on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - 'main'
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*
  # Run tests for any PRs.
  pull_request:
jobs:
  # detect changes in repository - e.g. only build frontend if frontend has changed
  changes:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            frontend:
              - '.github/workflows/**'
              - 'frontend/**'
            api:
              - '.github/workflows/**'
              - 'sgbf-api/**'
              - 'sgbf-client/**'
              - Cargo.toml
              - Cargo.lock
  build:
    needs: changes
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - package: api
            dockerfile: ./sgbf-api/Dockerfile
            image: ghcr.io/cfi2017/sgbf/api
            context: .
          - package: frontend
            dockerfile: ./frontend/Dockerfile
            image: ghcr.io/cfi2017/sgbf/frontend
            context: ./frontend
        package: ${{ fromJSON(needs.changes.outputs.packages) }}
    permissions:
      contents: read
      deployments: write
      packages: write
    name: Build docker images and publish to ghcr.io
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ matrix.image }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  deploy:
    needs:
    - changes
    - build
    runs-on: ubuntu-latest
    name: Write tags to k8s manifests using kustomize
    strategy:
      matrix:
        package: ${{ fromJSON(needs.changes.outputs.packages) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Kustomize edit images
        uses: imranismail/setup-kustomize@v2
        run: |
          echo ${{ needs.build.outputs.tags }}
          echo ${{ matrix.package }}
          # echo ${{ needs.build.outputs.tags }} | xargs -n1 -I{} kustomize edit set image ghcr.io/cfi2017/sgbf/${{ matrix.package }}=sha-${{ github.sha }}
